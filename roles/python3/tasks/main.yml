- name: Install Python build dependencies
  ansible.builtin.dnf:
    name:
      - gcc
      - make
      - tar
      - bzip2
      - bzip2-devel
      - libffi-devel
      - zlib-devel
      - xz-devel
      - openssl-devel
      - ncurses-devel
      - readline-devel
      - wget
      - findutils
    state: present
  tags:
    - install-python

- name: Create alternative tmp directory for compiler
  file:
    path: "{{ tmp_dir }}/tmp"
    state: directory
    mode: '1777'
  tags:
    - install-python

- name: Download Python source
  ansible.builtin.get_url:
    url: "https://www.python.org/ftp/python/{{ python_version }}/Python-{{ python_version }}.tgz"
    dest: "{{ tmp_dir }}/Python-{{ python_version }}.tgz"
    mode: '0644'
  tags: install-python

- name: Extract Python source
  ansible.builtin.unarchive:
    src: "{{ tmp_dir }}/Python-{{ python_version }}.tgz"
    dest: "{{ tmp_dir }}"
    remote_src: yes
  tags: install-python

- name: Configure Python build
  shell: ./configure --enable-optimizations --prefix=/usr/local > configure.log 2>&1
  args:
    chdir: "{{ tmp_dir }}/Python-{{ python_version }}"
    creates: "{{ tmp_dir }}/Python-{{ python_version }}/Makefile"
  tags: install-python

- name: Compile Python source
  shell: make -j 1 > make.log 2>&1
  args:
    chdir: "{{ tmp_dir }}/Python-{{ python_version }}"
    creates: "{{ tmp_dir }}/Python-{{ python_version }}/python"
  environment:
    TMPDIR: "{{ tmp_dir }}/tmp"
  tags: install-python

- name: Install Python via altinstall
  shell: make altinstall >> make.log 2>&1
  args:
    chdir: "{{ tmp_dir }}/Python-{{ python_version }}"
  register: altinstall_result
  ### Check to see that a basic library is installed: 
  failed_when: "'encodings' not in lookup('ansible.builtin.fileglob', '/usr/local/lib/python3.12/*')"
  tags: install-python

- name: Symlink Python system-wide 
  ansible.builtin.file:
    src: "{{ python_prefix }}/bin/python{{ python_major_version }}"
    dest: "/usr/bin/{{ python_link_name }}"
    state: link
    force: true
  tags:
    - install-python

- name: Verify Python installation
  command: "{{ python_link_name }} --version"
  register: python_version_output
  tags:
    - install-python

- name: Print installed Python version
  debug:
    msg: "Installed Python version: {{ python_version_output.stdout }}"
  tags:
    - install-python

- name: Clean up extracted source directory
  file:
    path: "{{ tmp_dir }}/Python-{{ python_version }}"
    state: absent
  tags:
    - install-python
    - python-cleanup

- name: Clean up downloaded archive
  file:
    path: "{{ tmp_dir }}/Python-{{ python_version }}.tgz"
    state: absent
  tags:
    - install-python

- name: Clean up alternative tmp directory
  file:
    path: "{{ tmp_dir }}/tmp"
    state: absent
  tags:
    - install-python
    - python-cleanup

- name: Clean up alternative tmp directory
  file:
    path: "{{ tmp_dir }}/tmp"
    state: absent
  tags:
    - install-python
    - python-cleanup
