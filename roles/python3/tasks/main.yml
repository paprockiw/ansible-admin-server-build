- name: Add 2GB swap file for compilation
  shell: |
    fallocate -l 2G /tmp-python-build-swapfile || dd if=/dev/zero of=/tmp-python-build-swapfile bs=1M count=2048
    chmod 600 /tmp-python-build-swapfile
    mkswap /tmp-python-build-swapfile
    swapon /tmp-python-build-swapfile
  args:
    creates: /tmp-python-build-swapfile
  become: true
  tags:
    - install-python
    - enable-python-build-swap


- name: Install Python build dependencies
  ansible.builtin.dnf:
    name:
      - gcc
      - make
      - tar
      - bzip2
      - bzip2-devel
      - libffi-devel
      - zlib-devel
      - xz-devel
      - openssl-devel
      - ncurses-devel
      - readline-devel
      - wget
      - findutils
    state: present
  tags:
    - install-python

- name: Download Python source
  ansible.builtin.get_url:
    url: "https://www.python.org/ftp/python/{{ python_version }}/Python-{{ python_version }}.tgz"
    dest: "/tmp/Python-{{ python_version }}.tgz"
    mode: '0644'
  tags: install-python

- name: Extract Python source
  ansible.builtin.unarchive:
    src: "/tmp/Python-{{ python_version }}.tgz"
    dest: "/tmp"
    remote_src: yes
  tags: install-python

- name: Configure Python build
  shell: ./configure --enable-optimizations --prefix=/usr/local > configure.log 2>&1
  args:
    chdir: "/tmp/Python-{{ python_version }}"
    creates: "/tmp/Python-{{ python_version }}/Makefile"
  tags: install-python

- name: Compile Python source
  shell: make -j $(nproc) > make.log 2>&1
  args:
    chdir: "/tmp/Python-{{ python_version }}"
    creates: "/tmp/Python-{{ python_version }}/python"
  tags: install-python

- name: Install Python via altinstall
  shell: make altinstall >> make.log 2>&1
  args:
    chdir: "/tmp/Python-{{ python_version }}"
    creates: "/usr/local/bin/python{{ python_major_version }}"
  tags: install-python


- name: Symlink Python system-wide 
  ansible.builtin.file:
    src: "{{ python_prefix }}/bin/python{{ python_major_version }}"
    dest: "/usr/bin/{{ python_link_name }}"
    state: link
    force: true
  tags:
    - install-python

- name: Verify Python installation
  command: "{{ python_link_name }} --version"
  register: python_version_output
  tags:
    - install-python

- name: Print installed Python version
  debug:
    msg: "Installed Python version: {{ python_version_output.stdout }}"
  tags:
    - install-python

- name: Clean up extracted source directory
  file:
    path: "/{{ tmp_dir }}/Python-{{ python_version }}"
    state: absent
  tags:
    - install-python

- name: Clean up downloaded archive
  file:
    path: "/{{ tmp_dir }}/Python-{{ python_version }}.tgz"
    state: absent
  tags:
    - install-python

- name: Remove temporary swap file
  shell: |
    swapoff /tmp-python-build-swapfile
    rm -f /tmp-python-build-swapfile
  when: cleanup_swap | default(true)
  tags:
    - install-python
    - enable-python-build-swap

